{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","components/App.js","index.js"],"names":["ContactFormStyled","styled","form","ContactForm","onSubmit","useState","name","setName","number","setNumber","onHandleSubmit","e","preventDefault","id","uuidv4","onHandleChange","target","value","method","className","type","pattern","title","required","onChange","onClick","ContactListStyled","ul","ContactList","getVisibleContacts","onDeleteContactById","deleteContact","map","FilterStyled","div","Filter","onChangeFilter","filter","SectionStyled","section","Section","children","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","contact","some","item","toLocaleLowerCase","alert","prev","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba579120.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactFormStyled = styled.form`\n  \ndisplay:flex;\nflex-direction:column;\nalign-items:center;\n  .form-label {\n    display: block;\n    text-align:center;\n    margin-bottom: 10px;\n    font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\n    font-weight: 500;\n    font-size: 20px;\n    color: #f3f3f3;\n  }\n  .form-input {\n    display: block;\n    padding: 5px;\n    text-align: center;\n    margin: 0 auto;\n    color: #636161;\n    outline: none;\n  }\n\n  input:focus {\n    box-shadow: 1px 1px 2px 0 #12bcb0;\n    border: 1px solid #dbd9d9;\n  }\n\n  .addBtn {\n\n    margin-top: 20px;\n    padding: 5px;\n    background-color: white;\n    border-color:white;\n    border-radius: 5px;\n    font-weight: 700;\n    color: #8b1455;\n\n    &:hover,\n    &:focus {\n      box-shadow: 1px 1px 2px 0 #0b2349;\n    }\n  }\n\n`;\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ContactFormStyled } from \"./ContactFormStyled\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number, id: uuidv4() });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <ContactFormStyled onSubmit={onHandleSubmit} method=\"post\">\n      <label className=\"form-label\">\n        Name\n        <br />\n        <input className=\"form-input\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onHandleChange}\n          value={name}\n        />\n      </label>\n      <label className=\"form-label\">\n        Number\n        <br />\n        <input className=\"form-input\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onHandleChange}\n          value={number}\n        />\n      </label>\n      {name && (\n        <button type=\"submit\" className=\"addBtn\" onClick={onHandleSubmit}>\n          Add contact\n        </button>\n      )}\n    </ContactFormStyled>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const ContactListStyled = styled.ul`\nmargin-top: 30px;\n.item {\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n}\np {\n  display: inline-block;\n  margin-right: 20px;\n}\n\n.name {\n  color: #f0f1f3;\n  font-weight: 600;\n  font-size: 20px;\n}\n\n.number {\n  color:#f0f1f3;\n  font-weight: 600;\n  font-size: 17px;\n}\n\n.delBtn {\n\n  margin-left: auto;\n  padding: 5px;\n  color:#8b1455;\n  border-color:8b1455;\n  background-color:#f0f1f3;\n  border-radius: 5px;\n  font-weight: 700;\n  &:hover,\n  &:focus {\n    box-shadow: 1px 1px 3px 0 #8b1455;\n  }\n}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ContactListStyled } from \"./ContactListStyled\";\n\nconst ContactList = ({ getVisibleContacts, onDeleteContactById }) => {\n  const deleteContact = (e) => onDeleteContactById(e.target.id);\n\n  return (\n    <ContactListStyled>\n      {getVisibleContacts().map(({ name, number, id }) => (\n        <li className=\"item\" key={id}>\n          <div className=\"name\">\n            <p className=\"number\">\n              {name} {number}\n            </p>\n            <button className=\"delBtn\" type=\"button\" id={id} onClick={deleteContact}>\n              delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ContactListStyled>\n  );\n};\n\nContactList.propTypes = {\n  getVisibleContacts: PropTypes.func,\n  onDeleteContactById: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\ntext-align: center;\n\n.form-title {\n  color: white;\n  margin-bottom: 10px;\n}\n\n.finde-input {\n  display: block;\n  padding: 5px;\n  text-align: center;\n  margin: 0 auto;\n  color: #bc0dad;\n  outline: none;\n}\n\ninput:focus {\n  box-shadow: 1px 1px 2px 0 #bc0dad;\n  border: 1px solid #bc0dad;\n}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FilterStyled } from \"./FilterStyled\";\n\nconst Filter = ({ onChangeFilter, filter }) => {\n  return (\n    <FilterStyled>\n      <label className=\"form-title\">\n        Find contacts by name\n        <br />\n        <input className=\"finde-input\"\n          value={filter}\n          onChange={onChangeFilter}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </FilterStyled>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const SectionStyled = styled.section`\n\n\n  .title {\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport { SectionStyled } from \"./SectionStyled\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <h2 className=\"title\">{title}</h2>\n      {children}\n    </SectionStyled>\n  );\n};\n\nexport default Section;\n","import { useEffect, useState } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport Section from \"./section/Section\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(\n    () =>\n      JSON.parse(window.localStorage.getItem(\"contacts\")) || [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ]\n  );\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onSubmit = (contact) => {\n    contacts.some(\n      (item) =>\n        item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n    )\n      ? alert(`${contact.name} is already in contacts.`)\n      : setContacts((prev) => [...prev, contact]);\n  };\n\n  const onDeleteContactById = (id) => {\n    setContacts((prev) => prev.filter((contact) => contact.id !== id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n\n  const onChangeFilter = (e) => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  return (\n    \n    <div className=\"App\">\n    \n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={onSubmit} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter onChangeFilter={onChangeFilter} filter={filter} />\n        <ContactList\n          getVisibleContacts={getVisibleContacts}\n          contacts={contacts}\n          onDeleteContactById={onDeleteContactById}\n        />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}